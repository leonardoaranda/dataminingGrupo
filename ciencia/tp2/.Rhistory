f=read.csv("fuzzy_results.csv")
#head(f)
table(f$k)
f=read.csv("fuzzy_results.csv")
#head(f)
table(f$k)
a = c()
for ( i in min(f$k):max(f$k) ) {
kFiltered = f[ f$k == i , ]
maxSilhuetteIndex = which.max(kFiltered[,c("silhuette_avg.width")])
a = rbind(a, kFiltered[maxSilhuetteIndex,] )
}
library("plotly")
library(dplyr)
plot_ly(a, x = k, y= silhuette_avg.width) %>%
add_trace(x = k, y = coeff)
fuzzyResults =read.csv("fuzzy_results.csv")
#head(f)
table(f$k)
fuzzyResults.max = c()
for ( i in min(fuzzyResults$k):max(fuzzyResults$k) ) {
kFiltered = fuzzyResults[ fuzzyResults$k == i , ]
maxSilhuetteIndex = which.max(kFiltered[,c("silhuette_avg.width")])
fuzzyResults.max = rbind(fuzzyResults.max, kFiltered[maxSilhuetteIndex,] )
}
library("plotly")
library(dplyr)
plot_ly(fuzzyResults.max, x = k, y= silhuette_avg.width) %>%
add_trace(x = k, y = coeff)
fuzzyResults[fuzzyResults$k == 4]
fuzzyResults[fuzzyResults$k == 4,]
plot_ly(fuzzyResults[fuzzyResults$k == 4,], x = fuzzyResults$memb.exp, y = fuzzyResults$silhuette_avg.width)
plot_ly(fuzzyResults[fuzzyResults$k == 4,], x = fuzzyResults$memb.exp, y = fuzzyResults$silhuette_avg.width, type="scatter")
plot_ly(fuzzyResults[fuzzyResults$k == 4,], x = fuzzyResults$memb.exp, y = fuzzyResults$silhuette_avg.width, type="histogram")
plot_ly(fuzzyResults[fuzzyResults$k == 4,], x = memb.exp, y = silhuette_avg.width)
plot_ly(fuzzyResults[fuzzyResults$k == 3,], x = memb.exp, y = silhuette_avg.width)
plot_ly(fuzzyResults[fuzzyResults$k == 2,], x = memb.exp, y = silhuette_avg.width)
plot_ly(fuzzyResults[fuzzyResults$k == 2,], x = memb.exp, y = silhuette_avg.width)
plot_ly(fuzzyResults[fuzzyResults$k == 2,], x = memb.exp, y = silhuette_avg.width)
add_trace(fuzzyResults[fuzzyResults$k == 4,], x = memb.exp, y = silhuette_avg.width)
plot_ly(fuzzyResults[fuzzyResults$k == 2,], x = memb.exp, y = silhuette_avg.width, legend = "asd")
add_trace(fuzzyResults[fuzzyResults$k == 4,], x = memb.exp, y = silhuette_avg.width)
plot_ly(fuzzyResults[fuzzyResults$k == 2,], x = memb.exp, y = silhuette_avg.width, name = "asd")
add_trace(fuzzyResults[fuzzyResults$k == 4,], x = memb.exp, y = silhuette_avg.width)
plot_ly(fuzzyResults[fuzzyResults$k == 2,], x = memb.exp, y = silhuette_avg.width, name = "k = 2")
add_trace(fuzzyResults[fuzzyResults$k == 4,], x = memb.exp, y = silhuette_avg.width, name = "k = 4")
plot_ly(fuzzyResults.max, x = k, y= silhuette_avg.width) %>%
add_trace(x = k, y = coeff)
plot_ly(fuzzyResults.max, x = k, y= silhuette_avg.width, name="silhuette") %>%
add_trace(x = k, y = coeff, name="coeff")
plot_ly(fuzzyResults[fuzzyResults$k == 2,], x = memb.exp, y = silhuette_avg.width, name = "k = 2")
add_trace(fuzzyResults[fuzzyResults$k == 3,], x = memb.exp, y = silhuette_avg.width, name = "k = 3")
add_trace(fuzzyResults[fuzzyResults$k == 4,], x = memb.exp, y = silhuette_avg.width, name = "k = 4")
fuzzyResults.max
plot_ly(fuzzyResults.max, x = k, y= silhuette_avg.width, name="silhuette") %>%
add_trace(x = k, y = coeff, name="coeff")
df.fuzzy.2 = fanny( df.dist, k = 2, diss = T,  memb.exp = 1.2, keep.diss = F, keep.data = F)
library(cluster)
library(MASS)
library(fpc)
library(doMC)
registerDoMC(3)
df.fuzzy.2 = fanny( df.dist, k = 2, diss = T,  memb.exp = 1.2, keep.diss = F, keep.data = F)
df = read.csv("../tp1/data_tp1.csv",row.names = 1)
df.dist = dist(df, method = "euclidean")
df.fuzzy.2 = fanny( df.dist, k = 2, diss = T,  memb.exp = 1.2, keep.diss = F, keep.data = F)
plot(df.fuzzy.2$silinfo)
plot(df.fuzzy.2$silinfo$widths)
?silhouette
silhouette(df.fuzzy.2)
plot(silhouette(df.fuzzy.2))
pdf("asd.pdf")
plot(silhouette(df.fuzzy.2))
dev.off()
df.fuzzy.3 = fanny( df.dist, k = 3, diss = T,  memb.exp = 1.2, keep.diss = F, keep.data = F)
pdf("asd.pdf")
plot(silhouette(df.fuzzy.2))
plot(silhouette(df.fuzzy.3))
dev.off()
df.fuzzy.4 = fanny( df.dist, k = 4, diss = T,  memb.exp = 1.2, keep.diss = F, keep.data = F)
pdf("asd.pdf")
plot(silhouette(df.fuzzy.2))
plot(silhouette(df.fuzzy.3))
plot(silhouette(df.fuzzy.4))
dev.off()
plot_ly(fuzzyResults.max, x = k, y= silhuette_avg.width, name="silhuette") %>%
add_trace(x = k, y = coeff, name="coeff")
plot_ly(fuzzyResults[fuzzyResults$k == 2,], x = memb.exp, y = coeff, name = "k = 2")
add_trace(fuzzyResults[fuzzyResults$k == 3,], x = memb.exp, y = coeff, name = "k = 3")
add_trace(fuzzyResults[fuzzyResults$k == 4,], x = memb.exp, y = coeff, name = "k = 4")
plot_ly(fuzzyResults[fuzzyResults$k == 2,], x = memb.exp, y = coeff, name = "k = 2")
add_trace(fuzzyResults[fuzzyResults$k == 3,], x = memb.exp, y = coeff, name = "k = 3")
add_trace(fuzzyResults[fuzzyResults$k == 4,], x = memb.exp, y = coeff, name = "k = 4")
df.fuzzy.2$k.crisp
df.fuzzy.3$k.crisp = fanny( df.dist, k = 3, diss = T,  memb.exp = 1.2, keep.diss = F, keep.data = F)
df.fuzzy.4$k.crisp
df.fuzzy.3 = fanny( df.dist, k = 3, diss = T,  memb.exp = 1.2, keep.diss = F, keep.data = F)
df.fuzzy.2$silinfo$widths
str(df.fuzzy.2$silinfo$widths)
head(df.fuzzy.2$silinfo$widths)
df.fuzzy.2$silinfo$widths[1]
df.fuzzy.2$silinfo$widths[,1]
head(df.fuzzy.2$silinfo$widths[ df.fuzzy.2$silinfo$widths[,3] < 0 ])
head(df.fuzzy.2$silinfo$widths[ df.fuzzy.2$silinfo$widths[,3] < 0, ])
df.fuzzy.2.negSil = df.fuzzy.2$silinfo$widths[ df.fuzzy.2$silinfo$widths[,3] < 0, ]
df.fuzzy.2.negSil
names(df.fuzzy.2.negSil)
rownames(df.fuzzy.2.negSil)
df.fuzzy.2$membership
df.fuzzy.2$membership[ rownames(df.fuzzy.2.negSil), ]
df.fuzzy.2.negSil
cbind ( df.fuzzy.2$membership[ rownames(df.fuzzy.2.negSil), ], df.fuzzy.2.negSil[3] )
cbind ( df.fuzzy.2$membership[ rownames(df.fuzzy.2.negSil), ], df.fuzzy.2.negSil[,3] )
df.fuzzy.3.negSil = df.fuzzy.3$silinfo$widths[ df.fuzzy.3$silinfo$widths[,3] < 0, ]
df.fuzzy.3.negSil
cbind ( df.fuzzy.3$membership[ rownames(df.fuzzy.3.negSil), ], df.fuzzy.3.negSil[,3] )
plot_ly(fuzzyResults.max, x = k, y= silhuette_avg.width, name="silhuette") %>%
add_trace(x = k, y = coeff, name="coeff")
plot_ly(fuzzyResults[fuzzyResults$k == 2,], x = memb.exp, y = coeff, name = "k = 2")
add_trace(fuzzyResults[fuzzyResults$k == 3,], x = memb.exp, y = coeff, name = "k = 3")
add_trace(fuzzyResults[fuzzyResults$k == 4,], x = memb.exp, y = coeff, name = "k = 4")
seq(1,1.2,0.02)
df.fuzzy.2$silinfo$widths[ df.fuzzy.2$silinfo$widths[,3] > 0.4, ]
df.fuzzy.2.highSil = df.fuzzy.2$silinfo$widths[ df.fuzzy.2$silinfo$widths[,3] > 0.4, ]
cbind ( df.fuzzy.2$membership[ rownames(df.fuzzy.2.highSil), ], df.fuzzy.2.highSil[,3] )
seq(1,1.2,0.02)
foreach(varMemb.exp = seq(1,1.2,0.02)) %dopar% {
t0 = Sys.time()
df.fuzz = fanny( df.dist, k = varK, diss = T,  memb.exp = varMemb.exp, keep.diss = F, keep.data = F)
t1 = Sys.time()
# cat("Tiempo: ", as.numeric(t1 - t0))
cat("tp1", varK, varMemb.exp, df.fuzz$silinfo$avg.width, df.fuzz$coeff[2], as.numeric(t1 - t0, units = "secs"),
file = "fuzzy_results.csv", sep = ",", append = T, fill = T)
}
varK = 2
foreach(varMemb.exp = seq(1,1.2,0.02)) %dopar% {
t0 = Sys.time()
df.fuzz = fanny( df.dist, k = varK, diss = T,  memb.exp = varMemb.exp, keep.diss = F, keep.data = F)
t1 = Sys.time()
# cat("Tiempo: ", as.numeric(t1 - t0))
cat("tp1", varK, varMemb.exp, df.fuzz$silinfo$avg.width, df.fuzz$coeff[2], as.numeric(t1 - t0, units = "secs"),
file = "fuzzy_results.csv", sep = ",", append = T, fill = T)
}
fuzzyResults =read.csv("fuzzy_results.csv")
table(f$k)
table(fuzzyResults$k)
plot_ly( fuzzyResults[ fuzzyResults$k == 2, ], x = memb.exp, y = coeff  )
fuzzyResults[ fuzzyResults$k == 2, ]
plot_ly( fuzzyResults[ fuzzyResults$k == 2 && fuzzyResults$coeff > 0 , ], x = memb.exp, y = coeff  )
fuzzyResults[ fuzzyResults$k == 2 && fuzzyResults$coeff > 0 , ]
fuzzyResults[ (fuzzyResults$k == 2 && fuzzyResults$coeff > 0) , ]
subset(fuzzyResults, k == 2)
subset(fuzzyResults, k == 2 && coeff > 0)
subset(fuzzyResults, k == 2, coeff > 0)
subset(fuzzyResults, k == 2 and coeff > 0)
subset(fuzzyResults, k == 2 && coeff > 0)
subset(fuzzyResults, k == 2 ^ coeff > 0)
subset(fuzzyResults, k == 2 && coeff > 0)
?subset
str(fuzzyResults)
fuzzyResults$k == 2 && fuzzyResults$coeff > 0
plot_ly( fuzzyResults[ fuzzyResults$k == 2, ], x = memb.exp, y = coeff  )
fuzzyResults[ fuzzyResults$k == 2, ]
sort(fuzzyResults[ fuzzyResults$k == 2, ])
?sort
fuzzyResults[ fuzzyResults$k == 2, ] %>%
order_by("memb.exp")
fuzzyResults[ fuzzyResults$k == 2, ] %>%
order_by(memb.exp)
?order_by
order_by(fuzzyResults[ fuzzyResults$k == 2, ], memb.exp)
order_by(fuzzyResults[ fuzzyResults$k == 2, ])
fuzzyResults[ fuzzyResults$k == 2, ] %>%
order_by(memb.exp)
fuzzyResults[ fuzzyResults$k == 2, ] %>%
filter( coeff > 0 )
fuzzyResults %>%
filter( k == 2, coeff > 0 )
fuzzyResults %>%
filter( k == 2, coeff > 0 ) %>%
plot_ly(x = memb.exp, y = coeff  )
fuzzyResults %>%
filter( k == 2, coeff > 0 ) %>%
arrange(memb.exp)
fuzzyResults %>%
filter( k == 2, coeff > 0 ) %>%
arrange(memb.exp) %>%
plot_ly(x = memb.exp, y = coeff  )
